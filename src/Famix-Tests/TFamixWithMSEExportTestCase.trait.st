"
Description
--------------------

I am a trait that can be applied to TestCase subclasses. 

The test case should fill a model in the setUp method. I will run each tests two times. The first with the filled model. The second with the model I get from exporting and reimporting the model to a MSE file.
"
Trait {
	#name : #TFamixWithMSEExportTestCase,
	#instVars : [
		'model'
	],
	#category : #'Famix-Tests'
}

{ #category : #running }
TFamixWithMSEExportTestCase >> runCase [
	"Here I run one time the tests with a the model generated by the setUp method, then I relaunch the test but using a model imported from a mse produced by the model generated by the setUp method to ensure the usability of the import/export."

	super runCase.
	self runCaseOnImportedModel
]

{ #category : #running }
TFamixWithMSEExportTestCase >> runCaseOnImportedModel [
	[ self setUpImportedModel.
	self performTest ]
		ensure: [ self tearDown.
			self cleanUpInstanceVariables ]
]

{ #category : #running }
TFamixWithMSEExportTestCase >> setUpImportedModel [
	| tempFile |
	self setUp.
	tempFile := (FileSystem memory / 'files-test.mse') ensureCreateFile.
	tempFile writeStreamDo: [ :s | model exportToMSEStream: s ].
	model := tempFile readStreamDo: [ :s | model class importFromMSEStream: s ].
	model name: 'IMPORTED FROM MSE' , model name
]
